---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
metadata:
  name: install-hdfs
timeout: 180
---
apiVersion: hdfs.stackable.tech/v1alpha1
kind: HdfsCluster
metadata:
  name: hdfs
spec:
  image:
{% if test_scenario['values']['hadoop'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['hadoop'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['hadoop'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['hadoop'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  clusterConfig:
    zookeeperConfigMapName: hdfs-zk
    dfsReplication: 1
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  nameNodes:
    envOverrides:
      COMMON_VAR: role-value # overridden by role group below
      ROLE_VAR: role-value   # only defined here at role level
    config:
      listenerClass: {{ test_scenario['values']['listener-class'] }}
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 2
        envOverrides:
          COMMON_VAR: group-value # overrides role value
          GROUP_VAR: group-value # only defined here at group level
  dataNodes:
    envOverrides:
      COMMON_VAR: role-value # overridden by role group below
      ROLE_VAR: role-value   # only defined here at role level
    config:
      listenerClass: {{ test_scenario['values']['listener-class'] }}
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
{% if test_scenario['values']['datanode-pvcs'] == '2hdd-1ssd' %}
      resources:
        storage:
          data: # We need to overwrite the data pvcs coming from the default value
            count: 0
          hdd:
            capacity: 2Gi
            count: 2
            hdfsStorageType: Disk
          ssd:
            capacity: 1Gi
            # storageClass: premium # We can't set the storage class in itegration tests, as we don't know which ones are available
            count: 1
            hdfsStorageType: SSD
{% endif %}
    roleGroups:
      default:
        envOverrides:
          COMMON_VAR: group-value # overrides role value
          GROUP_VAR: group-value # only defined here at group level
        replicas: {{ test_scenario['values']['number-of-datanodes'] }}
  journalNodes:
    envOverrides:
      COMMON_VAR: role-value # overridden by role group below
      ROLE_VAR: role-value   # only defined here at role level
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        envOverrides:
          COMMON_VAR: group-value # overrides role value
          GROUP_VAR: group-value # only defined here at group level
        replicas: 1
        podOverrides:
          spec:
            containers:
              - name: journalnode
                resources:
                  requests:
                    cpu: 110m
                  limits:
                    cpu: 410m
                ports:
                  # https://github.com/stackabletech/hdfs-operator/issues/514
                  - name: dashed-port
                    containerPort: 1234
